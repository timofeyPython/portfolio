import { IGetHtmlMessage } from "@src/user/types/types";
import * as bcrypt from "bcrypt";

export function templateMap(el: {
  id: string;
  name: string;
  nameFull: string;
  description: string;
}) {
  return {
    id: el.id,
    name: el.name,
    nameFull: el.nameFull,
    description: el.description,
  };
}

export async function hashed(password: string) {
  const saltOrRounds = 10;
  const hash = await bcrypt.hash(password, saltOrRounds);
  return hash;
}

export async function checkHash(password: string, hash: string) {
  return await bcrypt.compare(password, hash);
}

export const translateError = function (err: number) {
  switch (err) {
    case 0:
      return "–£—Å–ø–µ—Ö";
    case 1:
      return "–û—à–∏–±–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π";
    case 2:
      return "–û—à–∏–±–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞";
    case 3:
      return "–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏";
    case 4:
      return "–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞";
    case 5:
      return "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—ã—è–≤–∏–ª–æ –ª–æ–∂—å";
    case 6:
      return "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—ã—è–≤–∏–ª–æ –∏—Å—Ç–∏–Ω—É";
    case 7:
      return "–ú–µ—Ç–æ–¥ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è";
    case 8:
      return "–¢—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è";
    case 10:
      return "–û—Ç—Å—ã–ª–∫–∞";
    case 11:
      return "–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è";
    case 12:
      return "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ";
    case 13:
      return "–¢—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å";
    case 14:
      return "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–¥—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ SASL";
    case 16:
      return "–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞";
    case 17:
      return "–ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —Ç–∏–ø –∞—Ç—Ä–∏–±—É—Ç–∞";
    case 18:
      return "–ù–µ–ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ";
    case 19:
      return "–ù–∞—Ä—É—à–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π";
    case 20:
      return "–ê—Ç—Ä–∏–±—É—Ç –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç";
    case 21:
      return "–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∞—Ç—Ä–∏–±—É—Ç–∞";
    case 32:
      return "–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞";
    case 33:
      return "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–º";
    case 34:
      return "–ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å DN";
    case 36:
      return "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞";
    case 48:
      return "–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è";
    case 49:
      return "–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ";
    case 50:
      return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞";
    case 51:
      return "–ó–∞–Ω—è—Ç";
    case 52:
      return "–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω";
    case 53:
      return "–ù–µ –∂–µ–ª–∞—é—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å";
    case 54:
      return "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ";
    case 64:
      return "–ù–∞—Ä—É—à–µ–Ω–∏–µ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è";
    case 65:
      return "–ù–∞—Ä—É—à–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞";
    case 66:
      return "–ù–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –Ω–∞ –Ω–µ–ª–∏—Å—Ç–æ–≤–æ–π –∑–∞–ø–∏—Å–∏";
    case 67:
      return "–ù–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –Ω–∞ RDN";
    case 68:
      return "–ó–∞–ø–∏—Å—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç";
    case 69:
      return "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–æ";
    case 71:
      return "–û–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ DSA";
    case 80:
      return "–î—Ä—É–≥–æ–µ";
  }
};

export function addDays(date: Date, days: number) {
  var result = new Date(date);
  result.setDate(result.getDate() + days);
  return result;
}

export function findStatus(status: string) {
  const statuses = [
    {
      value: "0",
      description: "–í –ø–∞—É–∑–µ",
      htmlCode: "‚è∞",
    },
    {
      value: "1",
      description: "–í —Ä–∞–±–æ—Ç–µ",
      htmlCode: "üí™",
    },
    {
      value: "2",
      description: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
      htmlCode: "ü§ñ",
    },
    {
      value: "3",
      description: "–ó–∞–≤–µ—Ä—à–µ–Ω–æ",
      htmlCode: "üòé",
    },
  ];

  return statuses.find((entry) => entry.value === status).description;
}

export function getHtmlMessage({
  title,
  userName,
  userName1,
  description,
  date1,
  date2,
  groupName,
}: IGetHtmlMessage) {
  return `
    <h1>${title}</h1>
    <p>–ì—Ä—É–ø–ø–∞: ${groupName}</p>
    <p>–ù–∞–∑–Ω–∞—á–∏–ª: ${userName}</p>
    <p>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: ${userName1}</p>
    <p>–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è: ${description}</p>
    <p>–°—Ä–æ–∫: —Å ${new Date(date1).toLocaleDateString()} –ø–æ ${new Date(date2).toLocaleDateString()}</p>
  `;
}

// `
// <h1>–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–µ ${obj.name}</h1>
// <div>–ù–∞–∑–Ω–∞—á–∏–ª: ${user.name}</div>
// <p>–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è: ${obj.description}</p>
// <p>–°—Ä–æ–∫: c ${new Date(obj.startTask).toLocaleDateString()} –ø–æ ${new Date(obj.endTask).toLocaleDateString()}</p>
// `
